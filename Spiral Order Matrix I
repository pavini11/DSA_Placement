vector<int> f(const vector<vector<int> > &A,int rows,int rowe,int cols,int cole,vector<int>&B) {
    if(rows>rowe||cols>cole)
        return B;
    
    if(rows==rowe)
    {
            for(int i=cols;i<=cole;i++)
            {
                B.push_back(A[rows][i]);
            }
        return B;
    }
    
    if(cols==cole)
    {
            for(int i=rows;i<=rowe;i++)
            {
                B.push_back(A[i][cole]);
            }
        return B;
    }
    
    for(int i=cols;i<=cole;i++){
        B.push_back(A[rows][i]);
    }
    
    for(int i=rows+1;i<=rowe;i++){
        B.push_back(A[i][cole]);
    }

    for(int i=cole-1;i>=cols;i--){
        // cout<<"erg";
        B.push_back(A[rowe][i]);
    }
    
    for(int i=rowe-1;i>=rows+1;i--){
        B.push_back(A[i][cols]);
    }        
    return f(A,rows+1,rowe-1,cols+1,cole-1,B);  
}
vector<int> Solution::spiralOrder(const vector<vector<int> > &A) {
    vector<int> B;    
    return f(A,0,A.size()-1,0,A[0].size()-1,B);
}

// https://www.interviewbit.com/problems/spiral-order-matrix-i/
